<?php

/************************************************************************************************************
 * Fetches the generated transcription files if they exist, and sends them to the frontend. Used when
 * exporting the project to the user's local machine (in all four view pages).

***************************************************************************************************************/

require_once '../utils_php/utils.php';
require_once '../config/config.php';

$payload_from_frontend = json_decode(file_get_contents('php://input'), true);
$project_id = $payload_from_frontend["project_id"];
$save_id = $payload_from_frontend["save_id"];

$projectDir = "$USER_PROJECTS_ENTRY_POINT/$project_id";
$saveDir = "$projectDir/$save_id";

if(!is_dir($saveDir)){
    http_response_code(400);
    $server_error = new Exception("-------sent 400: bad request, saveDir does not exist: $saveDir");
    log_error_on_server($projectDir, $server_error);
    exit();
}

try {

    $generated_transcription = [];
    $post_processed_transcription = [];

    // ! These two file names are bound to the ones in run_gpu_python_code.php, save_transcription.php, and import_save.php
    if(is_file("$saveDir/generated_transcription.json")){ // generated by the Few-shot method
        $generated_transcription = json_decode(file_get_contents("$saveDir/generated_transcription.json"), true);
    }
    if(is_file("$saveDir/post_processed_transcription.json")){ // generated in the post-processing view based on the user's corrections
        $post_processed_transcription = json_decode(file_get_contents("$saveDir/post_processed_transcription.json"), true);
    }
    
    $output_merged = [
        "generated_transcription" => $generated_transcription,
        "post_processed_transcription" => $post_processed_transcription
    ];
    
    echo json_encode($output_merged);

} catch (Throwable $error_inside_try) {
    log_error_on_server($saveDir, $error_inside_try);
}

?>
